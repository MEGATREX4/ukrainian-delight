plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'  // Update to the latest stable version
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	mavenCentral()
	maven { url "https://maven.fabricmc.net/" }
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/releases/" }
	maven { url "https://api.modrinth.com/maven" }
	maven { url "https://repo.spongepowered.org/maven"}
}


fabricApi {
	configureDataGeneration()
}

dependencies {
	// Use proper versions defined in gradle.properties
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// REI Integration
	// modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_api_version}"
	// modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"

	// Farmers Delight API
	modCompileOnly "maven.modrinth:farmers-delight-refabricated:${project.farmersdelight_version}"

	// Mod Menu (optional)
	modCompileOnly "com.terraformersmc:modmenu:${project.modmenu_version}"

	// Cloth Config (optional)
	modCompileOnly "me.shedaniel.cloth:cloth-config-fabric:${project.clothconfig_version}"

	// Jade compatibility
	compileOnly "maven.modrinth:jade:${project.jade_version}"

	compileOnly "org.spongepowered:mixin:0.8.5"

	modCompileOnly "maven.modrinth:Patchouli:${patchouli_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}" }
	}
}

// Maven publication configuration
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
